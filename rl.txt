
:-dynamic facto/2,ultimo_facto/1.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Metaconhecimento

facto_dispara_regras(size(_, _), [1, 2, 3]).
facto_dispara_regras(material(_, dopedWithUvFluorescingAgent), [4]).
facto_dispara_regras(material(_, blackRubber), [5]).
facto_dispara_regras(material(_, blackPlastic), [6]).
facto_dispara_regras(material(_, glassTransparentPlastic), [7]).
facto_dispara_regras(material(_, semiMetalic), [8]).
facto_dispara_regras(material(_, metalic), [9]).
facto_dispara_regras(material(_, differentColourPieces), [10]).
facto_dispara_regras(motion(_, yes), [11]).
facto_dispara_regras(highlight(_, heightInspection), [12]).
facto_dispara_regras(highlight(_, holesOrPartSizing), [13]).
facto_dispara_regras(highlight(_, contours), [14]).
facto_dispara_regras(highlight(_, colour), [15, 16, 17]).
facto_dispara_regras(characteristicMaterial(_, reflective), [15]).
facto_dispara_regras(characteristicMaterial(_, shiny), [16]).
facto_dispara_regras(characteristicMaterial(_, others), [17, 18]).
facto_dispara_regras(externalLight(_, yes), [19, 20, 21]).
facto_dispara_regras(typeLight(_, ir), [19]).
facto_dispara_regras(typeLight(_, uv), [20]).
facto_dispara_regras(typeLight(_, other), [21]).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


ultimo_facto(3).
% ultima_regra(8).


% Object size
regra 1
	se [avalia(size(Object,=<,100))]
	entao [cria_facto(lens(Object, vinteCincomm))].

regra 2
	se [avalia(size(Object,>,300))]
	entao [cria_facto(lens(Object, dozeMeiomm))].

regra 3
	se [avalia(size(Object,>,100)) e avalia(size(Object,=<,300))]
	entao [cria_facto(lens(Object, dezasseismm))].

% Material type
regra 4
	se [material(Object, dopedWithUvFluorescingAgent)]
	entao [cria_facto(light(Object, ultraViolet))].

regra 5
	se [material(Object, blackRubber)]
	entao [cria_facto(light(Object, blue))].

regra 6
	se [material(Object, blackPlastic)]
	entao [cria_facto(light(Object, white))].

regra 7
	se [material(Object, glassTransparentPlastic)]
	entao [cria_facto(light(Object, red))].

regra 8
	se [material(Object, semiMetalic)]
	entao [cria_facto(light(Object, infrared))].

regra 9
	se [material(Object, metalic)]
	entao [cria_facto(light(Object, green))].

regra 10
	se [material(Object, differentColourPieces)]
	entao [cria_facto(light(Object, rgb))].

% Motion light
regra 11
	se [motion(Object, yes)]
	entao [cria_facto(mode(Object, lightInStrobe))].

% Highlights
regra 12
	se [highlight(Object,heightInspection)]
	entao [cria_facto(lightWith(Object, laserLightWith60degreeRelativeCamera))].

regra 13
	se [highlight(Object, holesOrPartSizing)]
	entao [cria_facto(lightWith(Object, backlight))].

regra 14
	se [highlight(Object, contours)]
	entao [cria_facto(lightWith(Object, lightWithIncidentAngle))].

% Material Caracteristics
regra 15
	se [highlight(Object, colour) e characteristicMaterial(Object, reflective)]
	entao [cria_facto(lightWith(Object, coaxialLight))].

regra 16
	se [highlight(Object, colour) e characteristicMaterial(Object, shiny)]
	entao [cria_facto(lightWith(Object, uniformIncidentLight))].

regra 17
	se [highlight(Object, colour) e characteristicMaterial(Object, shiny)]
	entao [cria_facto(lightWith(Object, polarizingFilter))].

regra 18
	se [highlight(Object, colour) e characteristicMaterial(Object, others)]
	entao [cria_facto(lightWith(Object, directLight))].

% External light influence
regra 19
	se [externalLight(Object, yes) e typeLight(Object, ir)]
	entao [cria_facto(bandpassFilter(Object, band700nm))].

regra 20
	se [externalLight(Object, yes) e typeLight(Object, uv)]
	entao [cria_facto(bandpassFilter(Object, band400nm))].

regra 21
	se [externalLight(Object, yes) e typeLight(Object, other)]
	entao [cria_facto(bandpassFilter(Object, closeVisionSetup))].

facto(1,size(objeto_1,200)).
facto(2,material(objeto_1,blackRubber)).
facto(3,highlight(objeto_1,contours)).